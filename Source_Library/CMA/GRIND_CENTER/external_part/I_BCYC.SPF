PROC I_BCYC DISPLOF
;外圆磨削循环控制程序

;当前工序判断
CASE PROCESS[18] OF 0 GOTOF NUM_0 1 GOTOF NUM_1 2 GOTOF NUM_2 3 GOTOF NUM_3 4 GOTOF NUM_DIY DEFAULT GOTOF NUM_EXIT

NUM_0:;粗磨
IF TECH_TIME[5]<TECHNOLOGY[78];当前粗磨次数<粗磨次数
    J_TECH_PARA_CUMU(TECH_TIME[5],TECHNOLOGY[239],TECHNOLOGY[78],TECHNOLOGY[80],TECHNOLOGY[81],PROCESS[30],TECHNOLOGY[79],TECH_DRESS_TIME[7],TECH_DRESS_DEEP[7],TECH_DRESS_FEED[7],TECHNOLOGY[82],WHEEL_LINESPEED_DRESS[9])
ELSE
    PROCESS[18]=PROCESS[18]+1;次数为零切换到下一工序
    GOTOF NUM_1;直接跳转到下一工序
ENDIF
RET

NUM_1:;半精磨
TECH_TIME[5]=TECHNOLOGY[78];前几个工序次数匹配
IF TECH_TIME[6]<TECHNOLOGY[83]
    J_TECH_PARA_CUMU(TECH_TIME[6],TECHNOLOGY[240],TECHNOLOGY[83],TECHNOLOGY[85],TECHNOLOGY[86],PROCESS[31],TECHNOLOGY[84],TECH_DRESS_TIME[8],TECH_DRESS_DEEP[8],TECH_DRESS_FEED[8],TECHNOLOGY[87],WHEEL_LINESPEED_DRESS[10])
ELSE
    PROCESS[18]=PROCESS[18]+1
    GOTOF NUM_2
ENDIF
RET

NUM_2:;精磨
TECH_TIME[5]=TECHNOLOGY[78];前几个工序次数匹配
TECH_TIME[6]=TECHNOLOGY[83];前几个工序次数匹配
IF TECH_TIME[7]<TECHNOLOGY[88]
    J_TECH_PARA_CUMU(TECH_TIME[7],TECHNOLOGY[241],TECHNOLOGY[88],TECHNOLOGY[90],TECHNOLOGY[91],PROCESS[32],TECHNOLOGY[89],TECH_DRESS_TIME[9],TECH_DRESS_DEEP[9],TECH_DRESS_FEED[9],TECHNOLOGY[92],WHEEL_LINESPEED_DRESS[11])
ELSE
    PROCESS[18]=PROCESS[18]+1
    GOTOF NUM_3
ENDIF
RET

NUM_3:;终磨
TECH_TIME[5]=TECHNOLOGY[78];前几个工序次数匹配
TECH_TIME[6]=TECHNOLOGY[83];前几个工序次数匹配
TECH_TIME[7]=TECHNOLOGY[88];前几个工序次数匹配
IF TECH_TIME[8]<TECHNOLOGY[93]
    J_TECH_PARA_CUMU(TECH_TIME[8],TECHNOLOGY[242],TECHNOLOGY[93],TECHNOLOGY[95],TECHNOLOGY[96],PROCESS[33],TECHNOLOGY[94],TECH_DRESS_TIME[10],TECH_DRESS_DEEP[10],TECH_DRESS_FEED[10],TECHNOLOGY[97],WHEEL_LINESPEED_DRESS[12])
ELSE
    PROCESS[18]=PROCESS[18]+1
    GOTOF NUM_DIY
ENDIF
RET

NUM_DIY:;DIY
TECH_TIME[5]=TECHNOLOGY[78];前几个工序次数匹配
TECH_TIME[6]=TECHNOLOGY[83];前几个工序次数匹配
TECH_TIME[7]=TECHNOLOGY[88];前几个工序次数匹配
TECH_TIME[8]=TECHNOLOGY[93];前几个工序次数匹配
IF TECH_TIME[9]<DIY[7]
    J_TECH_PARA_CUMU(TECH_TIME[9],DIY[13],DIY[7],DIY[9],DIY[10],DIY[12],DIY[8],TECH_DRESS_TIME[11],TECH_DRESS_DEEP[11],TECH_DRESS_FEED[11],DIY[11],WHEEL_LINESPEED_DRESS[13])
ELSE
    PROCESS[18]=PROCESS[18]+1
    GOTOF NUM_EXIT
ENDIF
RET

NUM_EXIT:;结束
TECH_TIME[9]=TECH_TIME[9]+1
RET

